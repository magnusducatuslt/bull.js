Arguments: 
  /usr/local/Cellar/node/15.5.1/bin/node /usr/local/Cellar/yarn/1.22.10/libexec/bin/yarn.js

PATH: 
  /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin

Yarn version: 
  1.22.10

Node version: 
  15.5.1

Platform: 
  darwin x64

Trace: 
  SyntaxError: /Users/magnusducatuslt/backend/bull.js/package.json: Unexpected token } in JSON at position 12340
      at JSON.parse (<anonymous>)
      at /usr/local/Cellar/yarn/1.22.10/libexec/lib/cli.js:1625:59
      at Generator.next (<anonymous>)
      at step (/usr/local/Cellar/yarn/1.22.10/libexec/lib/cli.js:310:30)
      at /usr/local/Cellar/yarn/1.22.10/libexec/lib/cli.js:321:13

npm manifest: 
  {
    "name": "bull.js",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {
      "tm": "jest ts-node/register --detectOpenHandles  ./src/services-v2/__tests__/migrate/template_migrate.spec.ts",
      "em": "yarn build && ts-node ./src/services-v2/__tests__/migrate/seeds/template_seeds",
      "imb": "yarn build && ts-node ./src/services-v2/__tests__/migrate/unmigrate",
      "mb": "jest ts-node/register --detectOpenHandles  ./src/services-v2/__tests__/migrate",
      "dump:fileDimension": "yarn build && node ./dist/src/dumbs/fileDimension.js",
      "dump:editorBlock": "yarn build && node ./dist/src/dumbs/editorBlock.js",
      "qu": "yarn build && ts-node ./src/dumbs/scorm/builder/queue.test",
      "sub": "yarn build && ts-node ./src/dumbs/scorm/pubsub/scorm.subscriber.ts",
      "pub": "yarn build && ts-node ./src/dumbs/scorm/pubsub/scorm.publisher.ts",
      "tt": "jest ts-node/register --detectOpenHandles  ./src/dumbs/export-project/lib/entities/utils.spec.ts",
      "up": "yarn build && ts-node ./src/dumbs/filesUpload",
      "ep": "yarn build && ts-node ./src/dumbs/export-project/bin/www.ts",
      "in": "yarn build && ts-node ./src/dumbs/insert-users",
      "fix-data": "yarn build && ts-node ./src/dumbs/fix-data",
      "i": "yarn build && ts-node ./src/dumbs/insert.ts",
      "pg": "yarn build && ts-node ./src/dumbs/postgres.ts",
      "y": "yarn build && ts-node ./src/dumbs/s3yandex.ts",
      "l": "yarn build && ts-node ./src/dumbs/do/list.ts",
      "n": "yarn build && ts-node ./src/dumbs/do/rename.ts",
      "u": "yarn build && ts-node ./src/dumbs/do/uploadStream.ts",
      "f": "yarn build && ts-node ./src/dumbs/do/fileSize.api.ts",
      "s": "yarn build && ts-node ./src/dumbs/do/server.ts",
      "d": "yarn build && ts-node ./src/dumbs/do/download.ts",
      "r": "yarn build && ts-node ./src/dumbs/do/requests.ts",
      "q": "yarn build && ts-node ./src/dumbs/queue.ts",
      "t": "yarn build && ts-node ./src/dumbs/test.ts",
      "dumbs:subscription": "yarn build && ts-node ./src/dumbs/subscription.ts",
      "dumbs:ws:server": "yarn build && ts-node ./src/dumbs/ws/ws.server.ts",
      "dumbs:test": "ts-node ./src/dumbs/test.ts",
      "dumbs:nginx": "docker run -it --rm -v $(pwd)/local/nginx/config/nginx.conf:/etc/nginx/conf.d/default.conf -p 80:80 --name nginx_local nginx",
      "run:engine": "yarn build && ts-node --files ./src/tester/engine.ts --out-put dist",
      "gogogo": "tsc -p .",
      "up:database": "docker-compose -f ./src/modules/database/docker-compose.yml --env-file=.env up -d",
      "down:database": "rm -r ./src/modules/database/postgres_data ./src/database/knomary_pgadmin && sudo docker-compose -f ./src/modules/database/docker-compose.yml --env-file=.env down --remove-orphans",
      "init:databases": "node ./src/modules/database/init/database.js",
      "up:gitlab": "sudo docker-compose -f ./src/ci/docker-compose.yml up -d --remove-orphans",
      "registration:gitlab_runner": "sudo bash ./src/ci/runner_registration.sh",
      "up:remote_runner": "sudo docker-compose -f ./src/ci/runnerRemote/docker-compose.yml up -d --remove-orphans",
      "registration:remote_runner": "sudo bash ./src/ci/runnerRemote/runner_registration.sh",
      "start:fs_deamon": "rm -rf ./src/modules/file-system/server/output && node ./src/modules/file-system/server/tcp-server.js",
      "start:fs_client": " ./src/modules/file-system/server/tcp-client.js",
      "test:unit_busyInterface": "jest ./src/modules/file-system/server/controller/server/busyInterface && rm -rf ./src/modules/file-system/server/controller/server/busyInterface/category1",
      "test:unit_availableInterface": "jest ./src/modules/file-system/server/controller/server/availableInterface",
      "run:graphql_server": "rm -rf ./build/server.js && webpack --env.MODE=DEVELOP --config webpack.config.storage.js",
      "build:graphql_server": "webpack --env.MODE=DEVELOP --config webpack.config.storage.js",
      "go:graphql_server": "node ./build/server",
      "up:redis": "docker-compose -f ./src/modules/cache/docker-compose/redis-compose.yml up -d --force-recreate --remove-orphans",
      "down:redis": "docker-compose -f ./src/modules/cache/docker-compose/redis-compose.yml down --remove-orphans",
      "clean:redis": "docker-compose -f ./src/modules/cache/docker-compose/redis-compose.yml down --remove-orphans && rm -rf ./src/modules/cache/docker-compose/redis_data",
      "drop:base_server": "node ./src/domains/server/controllers/__tests__/dropDatabase.js",
      "clear:bases_auth": "./src/domains/auth_graphql/controllers/__tests__/clear_docker.sh",
      "down:bases_auth": " ./src/domains/auth_graphql/controllers/__tests__/down_docker.sh",
      "run:auth_graphql": "ts-node ./src/domains/auth_graphql",
      "go:auth_graphql": "node ./build/auth_server",
      "up:test_database": "./src/modules/database/__tests__/up_docker.sh",
      "down:test_database": "./src/modules/database/__tests__/down_docker.sh",
      "test:database:integrational:postgres": "jest ts-node/register --detectOpenHandles --config ./src/modules/database/__tests__/jest.config.js ./src/modules/database/__tests__/integrational/Strategy.spec.js",
      "up:migrations": "./src/modules/orm/sequelizeOrm/up_migrations.sh",
      "down:migrations": "./src/modules/orm/sequelizeOrm/down_migrations.sh",
      "up:file_server": "./src/domains/file_server/up_docker.sh",
      "down:file_server": "./src/domains/file_server/down_docker.sh",
      "auth": "ts-node ./src/services-v2/auth",
      "storage": "ts-node --files ./src/services-v2/storage/bin/www.ts",
      "raw:auth": "node ./dist/src/services-v2/auth/bin/www.js",
      "raw:core": "node ./dist/src/services-v2/core/bin/www.js",
      "raw:storage": "node ./dist/src/services-v2/storage/bin/www.js",
      "raw:schema": "node ./dist/src/services-v2/gql-schema/bin/www.js",
      "raw:scorm": "node ./dist/src/services-v2/scorm/bin/www.js",
      "raw:health": "node ./dist/src/services-v2/health-check/bin/www.js",
      "dev:clean:storage": "rm -rf tmp/storage/*",
      "--------": "-------",
      "clean": "rm -rf ./dist",
      "clean:env": "rm -rf tmp/storages/* ",
      "build": "yarn clean && tsc -p .",
      "build:local": "yarn clean && rm -rf .env && cp .env_LOCAL .env && tsc -p .",
      "build:test": "yarn clean && rm -rf .env && cp .env_TESTING .env && tsc -p .",
      "build:slaveA": "yarn clean && rm -rf .env && cp .env_SLAVEA .env && tsc -p .",
      "build:slaveB": "yarn clean && rm -rf .env && cp .env_SLAVEB .env && tsc -p .",
      "build:dev": "yarn clean && rm -rf .env && cp .env_DEVELOP .env && tsc -p .",
      "build:prod": "yarn clean && rm -rf .env && cp .env_PROD .env && tsc -p .",
      "build:stage": "yarn clean && rm -rf .env && cp .env_STAGING .env && tsc -p .",
      "build:health": "docker build -f scorm.local.Dockerfile -t medic .",
      "up:health": "docker run -it --rm -p 8008:8008 --name medic_container medic",
      "watch:core": "ts-node --files ./src/services-v2/core/bin/www.ts --out-put dist",
      "watch:auth": "ts-node --files ./src/services-v2/auth/bin/www.ts --out-put dist",
      "watch:storage": "ts-node --files ./src/services-v2/storage/bin/www.ts --out-put dist",
      "watch:gql-schema": "ts-node --files ./src/services-v2/gql-schema/bin/www.ts --out-put dist",
      "start:env": "docker-compose --file=./docker-compose.local.yml --env-file=.env up --force-recreate --remove-orphans",
      "start:env_test:up": "cp .env_TESTING .env && yarn build:test && docker-compose -f ./docker-compose.test.yml --env-file=.env up --force-recreate --remove-orphans",
      "start:env_test:down": "docker-compose -f ./docker-compose.test.yml down --remove-orphans",
      "start:exam": "yarn build && ts-node --files ./src/services-v2/health-—Åheck/bin/www.ts --out-put dist",
      "test:db:clear": "yarn db:clear && yarn db:migrate && yarn db:seed",
      "test:services": "yarn test:db:clear && yarn jest --forceExit --detectOpenHandles --verbose src/services-v2/__tests__",
      "test:services:auth": "yarn test:db:clear && yarn jest --forceExit --detectOpenHandles --verbose src/services-v2/__tests__/auth",
      "test:services:core": "yarn test:db:clear && yarn jest --forceExit --detectOpenHandles --verbose src/services-v2/__tests__/core",
      "test:services:storage": "yarn test:db:clear && yarn jest --forceExit --detectOpenHandles --verbose src/services-v2/storage",
      "start:core": "yarn build && ts-node --files ./src/services-v2/core/bin/www.ts --out-put dist",
      "start:auth": "yarn build && ts-node --files ./src/services-v2/auth/bin/www.ts --out-put dist",
      "start:storage": "yarn build && ts-node --files ./src/services-v2/storage/bin/www.ts --out-put dist",
      "start:gql-schema": "yarn build && ts-node --files ./src/services-v2/gql-schema/bin/www.ts --out-put dist",
      "start:scorm": "yarn build && ts-node --files ./src/services-v2/scorm/bin/www.ts --out-put dist",
      "start:all": "yarn build && npm-run-all --parallel start:env watch:gql-schema watch:auth watch:core watch:storage",
      "start:kill": "yarn build && npm-run-all --parallel start:env watch:gql-schema watch:auth watch:storage",
      "lint-js": "eslint \"src/**/*.{js,ts,json,gql,graphql}\"",
      "fix-js": "yarn run lint-js --fix",
      "prettier": "prettier --single-quote --write \"src/**/*.{js,ts,json}\"",
      "precommit": "yarn run fix-js && yarn lint-js && pretty-quick --staged",
      "test:h": "yarn db:resync && jest ./src/services-v2/core/__tests__/role.spec.ts",
      "test:core:all": "yarn build && jest ./src/services-v2/auth/gql",
      "test:core": "yarn db:resync && jest ./src/services-v2/core/__tests__/",
      "test:unit": "jest \\.spec\\.ts?$",
      "test:fileMeta": "jest src/services-v2/__tests__/core/fileMeta/resolvers.spec.ts",
      "test:fileMetaGroup": "jest src/services-v2/__tests__/core/fileMetaGroup/resolvers.spec.ts",
      "test:projectGroup": "jest src/services-v2/__tests__/core/projectGroup/resolvers.spec.ts",
      "test:comp": "jest \\.test\\.ts?$",
      "test:mock": "yarn run mockapi -- --test",
      "test:watch": "jest --watch --notify",
      "test:cover": "./tools/test-cover.sh",
      "test:modules": "jest --forceExit src/dumbs/connections",
      "db:insert-users": "yarn build && node ./tools/insert-users/index.js",
      "db:create": "yarn build && node ./tools/create-db.js",
      "db:delete": "docker-compose -f docker-compose.local.yml down -v",
      "db:sync": "yarn build && node ./tools/sync-db.js",
      "db:seed": "yarn build && node ./tools/seed-db.js up",
      "db:seed:last": "sequelize db:seed:all --env development --debug --seeders-path ./dist/src/db-v2/seeders/1",
      "db:seed:undo": "yarn build && node ./tools/seed-db.js down",
      "db:migrate": "yarn build && node ./tools/migrate-db.js up",
      "db:migrate:undo": "yarn build && node ./tools/migrate-db.js down",
      "db:clear": "yarn build && node ./tools/drop-database.js",
      "db:resync": "yarn build && node ./tools/drop-database.js && node ./tools/sync-db.js && node ./tools/seed-db.js up local",
      "scorm:build:local": "yarn clean && rm .env && cp .env_SCORM_LOCAL .env && tsc -p .",
      "scorm:image:local:build": "docker build -f scorm.local.Dockerfile -t registry.gitlab.com/knomary/services/scorm-local/scorm-local:latest .",
      "scorm:image:local:push": "docker push registry.gitlab.com/knomary/services/scorm-local/scorm-local:latest",
      "medic:image:build": "yarn build && docker image build -f health.Dockerfile -t medic .",
      "medic:image:up": "docker run -p 8008:8008 medic"
    },
    "dependencies": {
      "@types/bull": "^3.12.2",
      "@types/faker": "^4.1.11",
      "@types/graphql-type-json": "^0.3.2",
      "@types/redis": "^2.8.18",
      "@types/uuid": "^7.0.2",
      "apollo-boost": "^0.4.9",
      "apollo-link-error": "^1.1.13",
      "apollo-server": "^2.22.1",
      "apollo-server-errors": "^2.4.2",
      "apollo-server-plugin-base": "^0.11.0",
      "babel-plugin-module-resolver": "^4.0.0",
      "body-parser": "^1.19.0",
      "bull": "^3.16.0",
      "cors": "^2.8.5",
      "cross-env": "^7.0.2",
      "debug": "^4.1.1",
      "dotenv": "^8.2.0",
      "express": "^4.17.1",
      "express-validation": "^3.0.2",
      "faker": "^4.1.0",
      "graphql": "^15.4.0",
      "graphql-redis-subscriptions": "^2.3.1",
      "graphql-scalars": "^1.6.1",
      "graphql-type-json": "^0.3.2",
      "ioredis": "^4.19.4",
      "istanbul": "^0.4.5",
      "jest": "^25.3.0",
      "redis": "^3.0.2",
      "uuid": "^7.0.3",
      "uuid-token-generator": "^1.0.0",
    },
    "resolutions": {
      "graphql": "^15.4.0"
    },
    "devDependencies": {
      "@types/joi": "^14.3.4",
      "@types/node": "^13.13.0",
      "@typescript-eslint/eslint-plugin": "^2.28.0",
      "@typescript-eslint/parser": "^2.28.0",
      "apollo-server-express": "^2.22.1",
      "apollo-server-testing": "^2.22.1",
      "eslint": "^6.8.0",
      "eslint-plugin-graphql": "^4.0.0",
      "eslint-plugin-import": "^2.20.2",
      "graphql-tools": "^7.0.2",
      "joi": "^14.3.1",
      "prettier": "^2.0.4",
      "pretty-quick": "^2.0.1",
      "ts-jest": "^25.4.0",
      "ts-node": "^8.10.1",
      "typescript": "^3.8.3"
    },
    "keywords": [],
    "author": "",
    "license": "MIT",
    "_moduleAliases": {
      "@core/config": "dist/src/config-v2/config",
      "@core/cache": "dist/src/cache-v2/index",
      "@core/queue": "dist/src/modules-v2/queue"
    }
  }

yarn manifest: 
  No manifest

Lockfile: 
  No lockfile
